package com.bizwink.po;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SignInfoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public SignInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(BigDecimal value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andUSERIDIsNull() {
            addCriterion("USERID is null");
            return (Criteria) this;
        }

        public Criteria andUSERIDIsNotNull() {
            addCriterion("USERID is not null");
            return (Criteria) this;
        }

        public Criteria andUSERIDEqualTo(BigDecimal value) {
            addCriterion("USERID =", value, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDNotEqualTo(BigDecimal value) {
            addCriterion("USERID <>", value, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDGreaterThan(BigDecimal value) {
            addCriterion("USERID >", value, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USERID >=", value, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDLessThan(BigDecimal value) {
            addCriterion("USERID <", value, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USERID <=", value, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDIn(List<BigDecimal> values) {
            addCriterion("USERID in", values, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDNotIn(List<BigDecimal> values) {
            addCriterion("USERID not in", values, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERID between", value1, value2, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERID not between", value1, value2, "USERID");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIsNull() {
            addCriterion("USERNAME is null");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIsNotNull() {
            addCriterion("USERNAME is not null");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEEqualTo(String value) {
            addCriterion("USERNAME =", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotEqualTo(String value) {
            addCriterion("USERNAME <>", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEGreaterThan(String value) {
            addCriterion("USERNAME >", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("USERNAME >=", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELessThan(String value) {
            addCriterion("USERNAME <", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELessThanOrEqualTo(String value) {
            addCriterion("USERNAME <=", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMELike(String value) {
            addCriterion("USERNAME like", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotLike(String value) {
            addCriterion("USERNAME not like", value, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEIn(List<String> values) {
            addCriterion("USERNAME in", values, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotIn(List<String> values) {
            addCriterion("USERNAME not in", values, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMEBetween(String value1, String value2) {
            addCriterion("USERNAME between", value1, value2, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andUSERNAMENotBetween(String value1, String value2) {
            addCriterion("USERNAME not between", value1, value2, "USERNAME");
            return (Criteria) this;
        }

        public Criteria andPROJCODEIsNull() {
            addCriterion("PROJCODE is null");
            return (Criteria) this;
        }

        public Criteria andPROJCODEIsNotNull() {
            addCriterion("PROJCODE is not null");
            return (Criteria) this;
        }

        public Criteria andPROJCODEEqualTo(String value) {
            addCriterion("PROJCODE =", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODENotEqualTo(String value) {
            addCriterion("PROJCODE <>", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODEGreaterThan(String value) {
            addCriterion("PROJCODE >", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODEGreaterThanOrEqualTo(String value) {
            addCriterion("PROJCODE >=", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODELessThan(String value) {
            addCriterion("PROJCODE <", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODELessThanOrEqualTo(String value) {
            addCriterion("PROJCODE <=", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODELike(String value) {
            addCriterion("PROJCODE like", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODENotLike(String value) {
            addCriterion("PROJCODE not like", value, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODEIn(List<String> values) {
            addCriterion("PROJCODE in", values, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODENotIn(List<String> values) {
            addCriterion("PROJCODE not in", values, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODEBetween(String value1, String value2) {
            addCriterion("PROJCODE between", value1, value2, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJCODENotBetween(String value1, String value2) {
            addCriterion("PROJCODE not between", value1, value2, "PROJCODE");
            return (Criteria) this;
        }

        public Criteria andPROJNAMEIsNull() {
            addCriterion("PROJNAME is null");
            return (Criteria) this;
        }

        public Criteria andPROJNAMEIsNotNull() {
            addCriterion("PROJNAME is not null");
            return (Criteria) this;
        }

        public Criteria andPROJNAMEEqualTo(String value) {
            addCriterion("PROJNAME =", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMENotEqualTo(String value) {
            addCriterion("PROJNAME <>", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMEGreaterThan(String value) {
            addCriterion("PROJNAME >", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("PROJNAME >=", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMELessThan(String value) {
            addCriterion("PROJNAME <", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMELessThanOrEqualTo(String value) {
            addCriterion("PROJNAME <=", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMELike(String value) {
            addCriterion("PROJNAME like", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMENotLike(String value) {
            addCriterion("PROJNAME not like", value, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMEIn(List<String> values) {
            addCriterion("PROJNAME in", values, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMENotIn(List<String> values) {
            addCriterion("PROJNAME not in", values, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMEBetween(String value1, String value2) {
            addCriterion("PROJNAME between", value1, value2, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andPROJNAMENotBetween(String value1, String value2) {
            addCriterion("PROJNAME not between", value1, value2, "PROJNAME");
            return (Criteria) this;
        }

        public Criteria andCOURSECODEIsNull() {
            addCriterion("COURSECODE is null");
            return (Criteria) this;
        }

        public Criteria andCOURSECODEIsNotNull() {
            addCriterion("COURSECODE is not null");
            return (Criteria) this;
        }

        public Criteria andCOURSECODEEqualTo(String value) {
            addCriterion("COURSECODE =", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODENotEqualTo(String value) {
            addCriterion("COURSECODE <>", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODEGreaterThan(String value) {
            addCriterion("COURSECODE >", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODEGreaterThanOrEqualTo(String value) {
            addCriterion("COURSECODE >=", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODELessThan(String value) {
            addCriterion("COURSECODE <", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODELessThanOrEqualTo(String value) {
            addCriterion("COURSECODE <=", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODELike(String value) {
            addCriterion("COURSECODE like", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODENotLike(String value) {
            addCriterion("COURSECODE not like", value, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODEIn(List<String> values) {
            addCriterion("COURSECODE in", values, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODENotIn(List<String> values) {
            addCriterion("COURSECODE not in", values, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODEBetween(String value1, String value2) {
            addCriterion("COURSECODE between", value1, value2, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSECODENotBetween(String value1, String value2) {
            addCriterion("COURSECODE not between", value1, value2, "COURSECODE");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMEIsNull() {
            addCriterion("COURSENAME is null");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMEIsNotNull() {
            addCriterion("COURSENAME is not null");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMEEqualTo(String value) {
            addCriterion("COURSENAME =", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMENotEqualTo(String value) {
            addCriterion("COURSENAME <>", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMEGreaterThan(String value) {
            addCriterion("COURSENAME >", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMEGreaterThanOrEqualTo(String value) {
            addCriterion("COURSENAME >=", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMELessThan(String value) {
            addCriterion("COURSENAME <", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMELessThanOrEqualTo(String value) {
            addCriterion("COURSENAME <=", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMELike(String value) {
            addCriterion("COURSENAME like", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMENotLike(String value) {
            addCriterion("COURSENAME not like", value, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMEIn(List<String> values) {
            addCriterion("COURSENAME in", values, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMENotIn(List<String> values) {
            addCriterion("COURSENAME not in", values, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMEBetween(String value1, String value2) {
            addCriterion("COURSENAME between", value1, value2, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andCOURSENAMENotBetween(String value1, String value2) {
            addCriterion("COURSENAME not between", value1, value2, "COURSENAME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMEIsNull() {
            addCriterion("SIGNTIME is null");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMEIsNotNull() {
            addCriterion("SIGNTIME is not null");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMEEqualTo(Date value) {
            addCriterion("SIGNTIME =", value, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMENotEqualTo(Date value) {
            addCriterion("SIGNTIME <>", value, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMEGreaterThan(Date value) {
            addCriterion("SIGNTIME >", value, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMEGreaterThanOrEqualTo(Date value) {
            addCriterion("SIGNTIME >=", value, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMELessThan(Date value) {
            addCriterion("SIGNTIME <", value, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMELessThanOrEqualTo(Date value) {
            addCriterion("SIGNTIME <=", value, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMEIn(List<Date> values) {
            addCriterion("SIGNTIME in", values, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMENotIn(List<Date> values) {
            addCriterion("SIGNTIME not in", values, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMEBetween(Date value1, Date value2) {
            addCriterion("SIGNTIME between", value1, value2, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andSIGNTIMENotBetween(Date value1, Date value2) {
            addCriterion("SIGNTIME not between", value1, value2, "SIGNTIME");
            return (Criteria) this;
        }

        public Criteria andCREATEDATEIsNull() {
            addCriterion("CREATEDATE is null");
            return (Criteria) this;
        }

        public Criteria andCREATEDATEIsNotNull() {
            addCriterion("CREATEDATE is not null");
            return (Criteria) this;
        }

        public Criteria andCREATEDATEEqualTo(Date value) {
            addCriterion("CREATEDATE =", value, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATENotEqualTo(Date value) {
            addCriterion("CREATEDATE <>", value, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATEGreaterThan(Date value) {
            addCriterion("CREATEDATE >", value, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATEGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATEDATE >=", value, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATELessThan(Date value) {
            addCriterion("CREATEDATE <", value, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATELessThanOrEqualTo(Date value) {
            addCriterion("CREATEDATE <=", value, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATEIn(List<Date> values) {
            addCriterion("CREATEDATE in", values, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATENotIn(List<Date> values) {
            addCriterion("CREATEDATE not in", values, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATEBetween(Date value1, Date value2) {
            addCriterion("CREATEDATE between", value1, value2, "CREATEDATE");
            return (Criteria) this;
        }

        public Criteria andCREATEDATENotBetween(Date value1, Date value2) {
            addCriterion("CREATEDATE not between", value1, value2, "CREATEDATE");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBL_SIGNINFO
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}