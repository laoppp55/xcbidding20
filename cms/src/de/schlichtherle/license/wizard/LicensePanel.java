/*
 * LicensePanel.java
 *
 * Created on 21. Februar 2005, 11:45
 */
/*
 * Copyright 2005 Schlichtherle IT Services
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package de.schlichtherle.license.wizard;

import com.nexes.wizard.*;
import de.schlichtherle.swing.*;
import de.schlichtherle.xml.*;

import java.awt.Toolkit;
import java.beans.*;
import java.text.*;
import java.util.*;
import java.util.prefs.*;

import javax.swing.*;
import javax.swing.border.*;
import de.schlichtherle.license.LicenseManager;
import de.schlichtherle.license.LicenseContent;

/**
 * @author  Christian Schlichtherle
 */
public class LicensePanel extends JPanel {

    private final LicenseManager manager;
    private LicenseContent content;
    
    /** Creates new form LicensePanel */
    public LicensePanel(LicenseManager manager) {
        this.manager = manager;
        
        initComponents();
    }

    /**
     * Verifies the installed license and updates the panel to display it.
     *
     * @throws Exception A subclass of this class for various reasons.
     *         The (localised) detail message should provide more information.
     */
    public final void verify()
    throws Exception {
        content = manager.verify();
        updatePanel();
    }
    
    /**
     * Updates the panel to display the installed license.
     */
    protected void updatePanel() {
        if (content == null)
            return;
        
        final DateFormat format = DateFormat.getDateTimeInstance(
                DateFormat.LONG, DateFormat.LONG);
        
        subjectComponent.setText(content.getSubject());
        holderComponent.setText(content.getHolder().getName());
        infoComponent.setText(content.getInfo());
        consumerComponent.setText(
                content.getConsumerType() + " (" + content.getConsumerAmount() + ")");
        final Date notBefore = content.getNotBefore();
        notBeforeComponent.setText(notBefore != null ? format.format(notBefore) : null);
        final Date notAfter = content.getNotAfter();
        notAfterComponent.setText(notAfter != null ? format.format(notAfter) : null);
        issuerComponent.setText(content.getIssuer().getName());
        final Date issued = content.getIssued();
        issuedComponent.setText(issued != null ? format.format(issued) : null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        holderComponent = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        subjectComponent = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        consumerComponent = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        notBeforeComponent = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        notAfterComponent = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        issuerComponent = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        issuedComponent = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoComponent = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.CompoundBorder(new javax.swing.border.TitledBorder(null, Resources.getString("LicensePanel.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, Defaults.labelBoldFont), new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10))));
        jLabel2.setFont(Defaults.labelBoldFont);
        jLabel2.setText(Resources.getString("LicensePanel.holder.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        add(jLabel2, gridBagConstraints);

        jScrollPane2.setBorder(new javax.swing.border.EtchedBorder());
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setViewportBorder(null);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 65));
        holderComponent.setEditable(false);
        holderComponent.setFont(Defaults.labelBoldFont);
        holderComponent.setLineWrap(true);
        holderComponent.setWrapStyleWord(true);
        holderComponent.setBorder(null);
        jScrollPane2.setViewportView(holderComponent);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        add(jScrollPane2, gridBagConstraints);

        jLabel1.setText(Resources.getString("LicensePanel.subject.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jLabel1, gridBagConstraints);

        subjectComponent.setEditable(false);
        subjectComponent.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(subjectComponent, gridBagConstraints);

        jLabel4.setText(Resources.getString("LicensePanel.consumer.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jLabel4, gridBagConstraints);

        consumerComponent.setEditable(false);
        consumerComponent.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(consumerComponent, gridBagConstraints);

        jLabel6.setText(Resources.getString("LicensePanel.notBefore.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jLabel6, gridBagConstraints);

        notBeforeComponent.setEditable(false);
        notBeforeComponent.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(notBeforeComponent, gridBagConstraints);

        jLabel7.setFont(Defaults.labelBoldFont);
        jLabel7.setText(Resources.getString("LicensePanel.notAfter.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jLabel7, gridBagConstraints);

        notAfterComponent.setEditable(false);
        notAfterComponent.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(notAfterComponent, gridBagConstraints);

        jLabel8.setText(Resources.getString("LicensePanel.issuer.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jLabel8, gridBagConstraints);

        jScrollPane3.setBorder(new javax.swing.border.EtchedBorder());
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setViewportBorder(null);
        jScrollPane3.setPreferredSize(new java.awt.Dimension(300, 65));
        issuerComponent.setEditable(false);
        issuerComponent.setLineWrap(true);
        issuerComponent.setWrapStyleWord(true);
        issuerComponent.setBorder(null);
        jScrollPane3.setViewportView(issuerComponent);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jScrollPane3, gridBagConstraints);

        jLabel9.setText(Resources.getString("LicensePanel.issued.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(jLabel9, gridBagConstraints);

        issuedComponent.setEditable(false);
        issuedComponent.setBorder(new javax.swing.border.EtchedBorder());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        add(issuedComponent, gridBagConstraints);

        jLabel3.setText(Resources.getString("LicensePanel.info.label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jLabel3, gridBagConstraints);

        jScrollPane1.setBorder(new javax.swing.border.EtchedBorder());
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportBorder(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 65));
        infoComponent.setEditable(false);
        infoComponent.setLineWrap(true);
        infoComponent.setWrapStyleWord(true);
        infoComponent.setBorder(null);
        jScrollPane1.setViewportView(infoComponent);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jScrollPane1, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea consumerComponent;
    private javax.swing.JTextArea holderComponent;
    private javax.swing.JTextArea infoComponent;
    private javax.swing.JTextArea issuedComponent;
    private javax.swing.JTextArea issuerComponent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea notAfterComponent;
    private javax.swing.JTextArea notBeforeComponent;
    private javax.swing.JTextArea subjectComponent;
    // End of variables declaration//GEN-END:variables
    
    public static class Descriptor extends WizardPanelDescriptor {

        public static final String IDENTIFIER = "LICENSE_PANEL"; // NOI18N
        
        public Descriptor(LicenseManager manager) {
            super(IDENTIFIER, new LicensePanel(manager));
        }

        public Object getNextPanelDescriptor() {
            return FINISH;
        }

        public Object getBackPanelDescriptor() {
            return WelcomePanel.Descriptor.IDENTIFIER;
        }  
        
        public void aboutToDisplayPanel() {
            LicensePanel panel = (LicensePanel)getPanelComponent();
            try {
                panel.verify();
            }
            catch (Exception failure) {
                Dialogs.showMessageDialog(
                        panel,
                        failure.getLocalizedMessage(),
                        Resources.getString("LicensePanel.failure.title"),
                        Dialogs.ERROR_MESSAGE);
            }
        }
    }
}
