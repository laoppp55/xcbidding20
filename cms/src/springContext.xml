<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
      
	<context:annotation-config />
	<context:component-scan base-package="com.egreatwall.common" />
	
	<context:property-placeholder location="classpath*:service_config.properties" ignore-unresolvable="true" />	
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="${jdbc.common.url}"/>
	    <property name="username" value="${jdbc.common.username}"></property>
	    <property name="password" value="${jdbc.common.password}" />

		<property name="filters"><value>stat</value></property>
	
	     <property name="maxActive"><value>20</value></property>
	     <property name="initialSize"><value>1</value></property>
	     <property name="maxWait"><value>60000</value></property>
	     <property name="minIdle"><value>1</value></property>
	
	     <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
	     <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
	
	     <property name="validationQuery"><value>select 1 from dual</value></property>
	     <property name="testWhileIdle"><value>true</value></property>
	     <property name="testOnBorrow"><value>false</value></property>
	     <property name="testOnReturn"><value>false</value></property>
	
	     <property name="poolPreparedStatements"><value>true</value></property>
	     <property name="maxOpenPreparedStatements"><value>20</value></property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- mybatis sql session -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:com/egreatwall/common/dao/*.xml" />
	</bean>
	<!-- 自动扫描mybatis的dao和mapping文件，将接口实例化 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.egreatwall.common.dao" />
	</bean>

	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="com.egreatwall.common" />

	<!-- 使用multicast广播注册中心暴露服务地址 -->
    <dubbo:registry address="${dubbo.registry.address}" />

	<!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="${dubbo.service.port}" />
	<dubbo:annotation package="com.egreatwall.common.service" />
	
	<dubbo:service interface="com.egreatwall.common.service.CodeService" ref="codeService"></dubbo:service>
	<bean id="codeService" class="com.egreatwall.common.service.CodeServiceImpl"></bean>
	
	<dubbo:service interface="com.egreatwall.common.service.UserService" ref="userService"></dubbo:service>
	<bean id="userService" class="com.egreatwall.common.service.UserServiceImpl"></bean>
	
	<dubbo:service interface="com.egreatwall.common.service.SupplierService" ref="supplierService"></dubbo:service>
	<bean id="supplierService" class="com.egreatwall.common.service.SupplierServiceImpl"></bean>
</beans>