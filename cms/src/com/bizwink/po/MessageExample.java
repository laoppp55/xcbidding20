package com.bizwink.po;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MessageExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public MessageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(BigDecimal value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andSITEIDIsNull() {
            addCriterion("SITEID is null");
            return (Criteria) this;
        }

        public Criteria andSITEIDIsNotNull() {
            addCriterion("SITEID is not null");
            return (Criteria) this;
        }

        public Criteria andSITEIDEqualTo(BigDecimal value) {
            addCriterion("SITEID =", value, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDNotEqualTo(BigDecimal value) {
            addCriterion("SITEID <>", value, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDGreaterThan(BigDecimal value) {
            addCriterion("SITEID >", value, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SITEID >=", value, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDLessThan(BigDecimal value) {
            addCriterion("SITEID <", value, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SITEID <=", value, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDIn(List<BigDecimal> values) {
            addCriterion("SITEID in", values, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDNotIn(List<BigDecimal> values) {
            addCriterion("SITEID not in", values, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SITEID between", value1, value2, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSITEIDNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SITEID not between", value1, value2, "SITEID");
            return (Criteria) this;
        }

        public Criteria andSEND_USERIsNull() {
            addCriterion("SEND_USER is null");
            return (Criteria) this;
        }

        public Criteria andSEND_USERIsNotNull() {
            addCriterion("SEND_USER is not null");
            return (Criteria) this;
        }

        public Criteria andSEND_USEREqualTo(String value) {
            addCriterion("SEND_USER =", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERNotEqualTo(String value) {
            addCriterion("SEND_USER <>", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERGreaterThan(String value) {
            addCriterion("SEND_USER >", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERGreaterThanOrEqualTo(String value) {
            addCriterion("SEND_USER >=", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERLessThan(String value) {
            addCriterion("SEND_USER <", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERLessThanOrEqualTo(String value) {
            addCriterion("SEND_USER <=", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERLike(String value) {
            addCriterion("SEND_USER like", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERNotLike(String value) {
            addCriterion("SEND_USER not like", value, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERIn(List<String> values) {
            addCriterion("SEND_USER in", values, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERNotIn(List<String> values) {
            addCriterion("SEND_USER not in", values, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERBetween(String value1, String value2) {
            addCriterion("SEND_USER between", value1, value2, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andSEND_USERNotBetween(String value1, String value2) {
            addCriterion("SEND_USER not between", value1, value2, "SEND_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERIsNull() {
            addCriterion("RECEIVE_USER is null");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERIsNotNull() {
            addCriterion("RECEIVE_USER is not null");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USEREqualTo(String value) {
            addCriterion("RECEIVE_USER =", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERNotEqualTo(String value) {
            addCriterion("RECEIVE_USER <>", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERGreaterThan(String value) {
            addCriterion("RECEIVE_USER >", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERGreaterThanOrEqualTo(String value) {
            addCriterion("RECEIVE_USER >=", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERLessThan(String value) {
            addCriterion("RECEIVE_USER <", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERLessThanOrEqualTo(String value) {
            addCriterion("RECEIVE_USER <=", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERLike(String value) {
            addCriterion("RECEIVE_USER like", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERNotLike(String value) {
            addCriterion("RECEIVE_USER not like", value, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERIn(List<String> values) {
            addCriterion("RECEIVE_USER in", values, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERNotIn(List<String> values) {
            addCriterion("RECEIVE_USER not in", values, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERBetween(String value1, String value2) {
            addCriterion("RECEIVE_USER between", value1, value2, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_USERNotBetween(String value1, String value2) {
            addCriterion("RECEIVE_USER not between", value1, value2, "RECEIVE_USER");
            return (Criteria) this;
        }

        public Criteria andMESSAGEIsNull() {
            addCriterion("MESSAGE is null");
            return (Criteria) this;
        }

        public Criteria andMESSAGEIsNotNull() {
            addCriterion("MESSAGE is not null");
            return (Criteria) this;
        }

        public Criteria andMESSAGEEqualTo(String value) {
            addCriterion("MESSAGE =", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGENotEqualTo(String value) {
            addCriterion("MESSAGE <>", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGEGreaterThan(String value) {
            addCriterion("MESSAGE >", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGEGreaterThanOrEqualTo(String value) {
            addCriterion("MESSAGE >=", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGELessThan(String value) {
            addCriterion("MESSAGE <", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGELessThanOrEqualTo(String value) {
            addCriterion("MESSAGE <=", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGELike(String value) {
            addCriterion("MESSAGE like", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGENotLike(String value) {
            addCriterion("MESSAGE not like", value, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGEIn(List<String> values) {
            addCriterion("MESSAGE in", values, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGENotIn(List<String> values) {
            addCriterion("MESSAGE not in", values, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGEBetween(String value1, String value2) {
            addCriterion("MESSAGE between", value1, value2, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andMESSAGENotBetween(String value1, String value2) {
            addCriterion("MESSAGE not between", value1, value2, "MESSAGE");
            return (Criteria) this;
        }

        public Criteria andSENDDATEIsNull() {
            addCriterion("SENDDATE is null");
            return (Criteria) this;
        }

        public Criteria andSENDDATEIsNotNull() {
            addCriterion("SENDDATE is not null");
            return (Criteria) this;
        }

        public Criteria andSENDDATEEqualTo(Date value) {
            addCriterionForJDBCDate("SENDDATE =", value, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATENotEqualTo(Date value) {
            addCriterionForJDBCDate("SENDDATE <>", value, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATEGreaterThan(Date value) {
            addCriterionForJDBCDate("SENDDATE >", value, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATEGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("SENDDATE >=", value, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATELessThan(Date value) {
            addCriterionForJDBCDate("SENDDATE <", value, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATELessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("SENDDATE <=", value, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATEIn(List<Date> values) {
            addCriterionForJDBCDate("SENDDATE in", values, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATENotIn(List<Date> values) {
            addCriterionForJDBCDate("SENDDATE not in", values, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATEBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("SENDDATE between", value1, value2, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSENDDATENotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("SENDDATE not between", value1, value2, "SENDDATE");
            return (Criteria) this;
        }

        public Criteria andSEND_DELIsNull() {
            addCriterion("SEND_DEL is null");
            return (Criteria) this;
        }

        public Criteria andSEND_DELIsNotNull() {
            addCriterion("SEND_DEL is not null");
            return (Criteria) this;
        }

        public Criteria andSEND_DELEqualTo(BigDecimal value) {
            addCriterion("SEND_DEL =", value, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELNotEqualTo(BigDecimal value) {
            addCriterion("SEND_DEL <>", value, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELGreaterThan(BigDecimal value) {
            addCriterion("SEND_DEL >", value, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SEND_DEL >=", value, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELLessThan(BigDecimal value) {
            addCriterion("SEND_DEL <", value, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SEND_DEL <=", value, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELIn(List<BigDecimal> values) {
            addCriterion("SEND_DEL in", values, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELNotIn(List<BigDecimal> values) {
            addCriterion("SEND_DEL not in", values, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SEND_DEL between", value1, value2, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andSEND_DELNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SEND_DEL not between", value1, value2, "SEND_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELIsNull() {
            addCriterion("RECEIVE_DEL is null");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELIsNotNull() {
            addCriterion("RECEIVE_DEL is not null");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELEqualTo(BigDecimal value) {
            addCriterion("RECEIVE_DEL =", value, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELNotEqualTo(BigDecimal value) {
            addCriterion("RECEIVE_DEL <>", value, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELGreaterThan(BigDecimal value) {
            addCriterion("RECEIVE_DEL >", value, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RECEIVE_DEL >=", value, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELLessThan(BigDecimal value) {
            addCriterion("RECEIVE_DEL <", value, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RECEIVE_DEL <=", value, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELIn(List<BigDecimal> values) {
            addCriterion("RECEIVE_DEL in", values, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELNotIn(List<BigDecimal> values) {
            addCriterion("RECEIVE_DEL not in", values, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECEIVE_DEL between", value1, value2, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andRECEIVE_DELNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECEIVE_DEL not between", value1, value2, "RECEIVE_DEL");
            return (Criteria) this;
        }

        public Criteria andFLAGIsNull() {
            addCriterion("FLAG is null");
            return (Criteria) this;
        }

        public Criteria andFLAGIsNotNull() {
            addCriterion("FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andFLAGEqualTo(BigDecimal value) {
            addCriterion("FLAG =", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGNotEqualTo(BigDecimal value) {
            addCriterion("FLAG <>", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGGreaterThan(BigDecimal value) {
            addCriterion("FLAG >", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FLAG >=", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGLessThan(BigDecimal value) {
            addCriterion("FLAG <", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FLAG <=", value, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGIn(List<BigDecimal> values) {
            addCriterion("FLAG in", values, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGNotIn(List<BigDecimal> values) {
            addCriterion("FLAG not in", values, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLAG between", value1, value2, "FLAG");
            return (Criteria) this;
        }

        public Criteria andFLAGNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FLAG not between", value1, value2, "FLAG");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table EN_MESSAGE
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}