package com.bizwink.po;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public CommentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(BigDecimal value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(BigDecimal value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(BigDecimal value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(BigDecimal value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<BigDecimal> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<BigDecimal> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSiteidIsNull() {
            addCriterion("SITEID is null");
            return (Criteria) this;
        }

        public Criteria andSiteidIsNotNull() {
            addCriterion("SITEID is not null");
            return (Criteria) this;
        }

        public Criteria andSiteidEqualTo(BigDecimal value) {
            addCriterion("SITEID =", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidNotEqualTo(BigDecimal value) {
            addCriterion("SITEID <>", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidGreaterThan(BigDecimal value) {
            addCriterion("SITEID >", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SITEID >=", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidLessThan(BigDecimal value) {
            addCriterion("SITEID <", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SITEID <=", value, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidIn(List<BigDecimal> values) {
            addCriterion("SITEID in", values, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidNotIn(List<BigDecimal> values) {
            addCriterion("SITEID not in", values, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SITEID between", value1, value2, "siteid");
            return (Criteria) this;
        }

        public Criteria andSiteidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SITEID not between", value1, value2, "siteid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("USERID is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("USERID is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(BigDecimal value) {
            addCriterion("USERID =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(BigDecimal value) {
            addCriterion("USERID <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(BigDecimal value) {
            addCriterion("USERID >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USERID >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(BigDecimal value) {
            addCriterion("USERID <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USERID <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<BigDecimal> values) {
            addCriterion("USERID in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<BigDecimal> values) {
            addCriterion("USERID not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERID between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USERID not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNull() {
            addCriterion("USERNAME is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("USERNAME is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("USERNAME =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("USERNAME <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("USERNAME >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("USERNAME >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("USERNAME <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("USERNAME <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("USERNAME like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("USERNAME not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("USERNAME in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("USERNAME not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("USERNAME between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("USERNAME not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andPidIsNull() {
            addCriterion("PID is null");
            return (Criteria) this;
        }

        public Criteria andPidIsNotNull() {
            addCriterion("PID is not null");
            return (Criteria) this;
        }

        public Criteria andPidEqualTo(BigDecimal value) {
            addCriterion("PID =", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotEqualTo(BigDecimal value) {
            addCriterion("PID <>", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThan(BigDecimal value) {
            addCriterion("PID >", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PID >=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThan(BigDecimal value) {
            addCriterion("PID <", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PID <=", value, "pid");
            return (Criteria) this;
        }

        public Criteria andPidIn(List<BigDecimal> values) {
            addCriterion("PID in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotIn(List<BigDecimal> values) {
            addCriterion("PID not in", values, "pid");
            return (Criteria) this;
        }

        public Criteria andPidBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PID between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andPidNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PID not between", value1, value2, "pid");
            return (Criteria) this;
        }

        public Criteria andCommenttitleIsNull() {
            addCriterion("COMMENTTITLE is null");
            return (Criteria) this;
        }

        public Criteria andCommenttitleIsNotNull() {
            addCriterion("COMMENTTITLE is not null");
            return (Criteria) this;
        }

        public Criteria andCommenttitleEqualTo(String value) {
            addCriterion("COMMENTTITLE =", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleNotEqualTo(String value) {
            addCriterion("COMMENTTITLE <>", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleGreaterThan(String value) {
            addCriterion("COMMENTTITLE >", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENTTITLE >=", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleLessThan(String value) {
            addCriterion("COMMENTTITLE <", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleLessThanOrEqualTo(String value) {
            addCriterion("COMMENTTITLE <=", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleLike(String value) {
            addCriterion("COMMENTTITLE like", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleNotLike(String value) {
            addCriterion("COMMENTTITLE not like", value, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleIn(List<String> values) {
            addCriterion("COMMENTTITLE in", values, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleNotIn(List<String> values) {
            addCriterion("COMMENTTITLE not in", values, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleBetween(String value1, String value2) {
            addCriterion("COMMENTTITLE between", value1, value2, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andCommenttitleNotBetween(String value1, String value2) {
            addCriterion("COMMENTTITLE not between", value1, value2, "commenttitle");
            return (Criteria) this;
        }

        public Criteria andScoresIsNull() {
            addCriterion("SCORES is null");
            return (Criteria) this;
        }

        public Criteria andScoresIsNotNull() {
            addCriterion("SCORES is not null");
            return (Criteria) this;
        }

        public Criteria andScoresEqualTo(BigDecimal value) {
            addCriterion("SCORES =", value, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresNotEqualTo(BigDecimal value) {
            addCriterion("SCORES <>", value, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresGreaterThan(BigDecimal value) {
            addCriterion("SCORES >", value, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SCORES >=", value, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresLessThan(BigDecimal value) {
            addCriterion("SCORES <", value, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SCORES <=", value, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresIn(List<BigDecimal> values) {
            addCriterion("SCORES in", values, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresNotIn(List<BigDecimal> values) {
            addCriterion("SCORES not in", values, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCORES between", value1, value2, "scores");
            return (Criteria) this;
        }

        public Criteria andScoresNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCORES not between", value1, value2, "scores");
            return (Criteria) this;
        }

        public Criteria andExperienceIsNull() {
            addCriterion("EXPERIENCE is null");
            return (Criteria) this;
        }

        public Criteria andExperienceIsNotNull() {
            addCriterion("EXPERIENCE is not null");
            return (Criteria) this;
        }

        public Criteria andExperienceEqualTo(String value) {
            addCriterion("EXPERIENCE =", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceNotEqualTo(String value) {
            addCriterion("EXPERIENCE <>", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceGreaterThan(String value) {
            addCriterion("EXPERIENCE >", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceGreaterThanOrEqualTo(String value) {
            addCriterion("EXPERIENCE >=", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceLessThan(String value) {
            addCriterion("EXPERIENCE <", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceLessThanOrEqualTo(String value) {
            addCriterion("EXPERIENCE <=", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceLike(String value) {
            addCriterion("EXPERIENCE like", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceNotLike(String value) {
            addCriterion("EXPERIENCE not like", value, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceIn(List<String> values) {
            addCriterion("EXPERIENCE in", values, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceNotIn(List<String> values) {
            addCriterion("EXPERIENCE not in", values, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceBetween(String value1, String value2) {
            addCriterion("EXPERIENCE between", value1, value2, "experience");
            return (Criteria) this;
        }

        public Criteria andExperienceNotBetween(String value1, String value2) {
            addCriterion("EXPERIENCE not between", value1, value2, "experience");
            return (Criteria) this;
        }

        public Criteria andAdvantagesIsNull() {
            addCriterion("ADVANTAGES is null");
            return (Criteria) this;
        }

        public Criteria andAdvantagesIsNotNull() {
            addCriterion("ADVANTAGES is not null");
            return (Criteria) this;
        }

        public Criteria andAdvantagesEqualTo(String value) {
            addCriterion("ADVANTAGES =", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesNotEqualTo(String value) {
            addCriterion("ADVANTAGES <>", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesGreaterThan(String value) {
            addCriterion("ADVANTAGES >", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesGreaterThanOrEqualTo(String value) {
            addCriterion("ADVANTAGES >=", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesLessThan(String value) {
            addCriterion("ADVANTAGES <", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesLessThanOrEqualTo(String value) {
            addCriterion("ADVANTAGES <=", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesLike(String value) {
            addCriterion("ADVANTAGES like", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesNotLike(String value) {
            addCriterion("ADVANTAGES not like", value, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesIn(List<String> values) {
            addCriterion("ADVANTAGES in", values, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesNotIn(List<String> values) {
            addCriterion("ADVANTAGES not in", values, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesBetween(String value1, String value2) {
            addCriterion("ADVANTAGES between", value1, value2, "advantages");
            return (Criteria) this;
        }

        public Criteria andAdvantagesNotBetween(String value1, String value2) {
            addCriterion("ADVANTAGES not between", value1, value2, "advantages");
            return (Criteria) this;
        }

        public Criteria andShortcomingsIsNull() {
            addCriterion("SHORTCOMINGS is null");
            return (Criteria) this;
        }

        public Criteria andShortcomingsIsNotNull() {
            addCriterion("SHORTCOMINGS is not null");
            return (Criteria) this;
        }

        public Criteria andShortcomingsEqualTo(String value) {
            addCriterion("SHORTCOMINGS =", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsNotEqualTo(String value) {
            addCriterion("SHORTCOMINGS <>", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsGreaterThan(String value) {
            addCriterion("SHORTCOMINGS >", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsGreaterThanOrEqualTo(String value) {
            addCriterion("SHORTCOMINGS >=", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsLessThan(String value) {
            addCriterion("SHORTCOMINGS <", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsLessThanOrEqualTo(String value) {
            addCriterion("SHORTCOMINGS <=", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsLike(String value) {
            addCriterion("SHORTCOMINGS like", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsNotLike(String value) {
            addCriterion("SHORTCOMINGS not like", value, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsIn(List<String> values) {
            addCriterion("SHORTCOMINGS in", values, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsNotIn(List<String> values) {
            addCriterion("SHORTCOMINGS not in", values, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsBetween(String value1, String value2) {
            addCriterion("SHORTCOMINGS between", value1, value2, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andShortcomingsNotBetween(String value1, String value2) {
            addCriterion("SHORTCOMINGS not between", value1, value2, "shortcomings");
            return (Criteria) this;
        }

        public Criteria andUsefulnumIsNull() {
            addCriterion("USEFULNUM is null");
            return (Criteria) this;
        }

        public Criteria andUsefulnumIsNotNull() {
            addCriterion("USEFULNUM is not null");
            return (Criteria) this;
        }

        public Criteria andUsefulnumEqualTo(BigDecimal value) {
            addCriterion("USEFULNUM =", value, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumNotEqualTo(BigDecimal value) {
            addCriterion("USEFULNUM <>", value, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumGreaterThan(BigDecimal value) {
            addCriterion("USEFULNUM >", value, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("USEFULNUM >=", value, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumLessThan(BigDecimal value) {
            addCriterion("USEFULNUM <", value, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumLessThanOrEqualTo(BigDecimal value) {
            addCriterion("USEFULNUM <=", value, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumIn(List<BigDecimal> values) {
            addCriterion("USEFULNUM in", values, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumNotIn(List<BigDecimal> values) {
            addCriterion("USEFULNUM not in", values, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USEFULNUM between", value1, value2, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andUsefulnumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("USEFULNUM not between", value1, value2, "usefulnum");
            return (Criteria) this;
        }

        public Criteria andNousenumIsNull() {
            addCriterion("NOUSENUM is null");
            return (Criteria) this;
        }

        public Criteria andNousenumIsNotNull() {
            addCriterion("NOUSENUM is not null");
            return (Criteria) this;
        }

        public Criteria andNousenumEqualTo(BigDecimal value) {
            addCriterion("NOUSENUM =", value, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumNotEqualTo(BigDecimal value) {
            addCriterion("NOUSENUM <>", value, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumGreaterThan(BigDecimal value) {
            addCriterion("NOUSENUM >", value, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("NOUSENUM >=", value, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumLessThan(BigDecimal value) {
            addCriterion("NOUSENUM <", value, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumLessThanOrEqualTo(BigDecimal value) {
            addCriterion("NOUSENUM <=", value, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumIn(List<BigDecimal> values) {
            addCriterion("NOUSENUM in", values, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumNotIn(List<BigDecimal> values) {
            addCriterion("NOUSENUM not in", values, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NOUSENUM between", value1, value2, "nousenum");
            return (Criteria) this;
        }

        public Criteria andNousenumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("NOUSENUM not between", value1, value2, "nousenum");
            return (Criteria) this;
        }

        public Criteria andAuditflagIsNull() {
            addCriterion("AUDITFLAG is null");
            return (Criteria) this;
        }

        public Criteria andAuditflagIsNotNull() {
            addCriterion("AUDITFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andAuditflagEqualTo(BigDecimal value) {
            addCriterion("AUDITFLAG =", value, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagNotEqualTo(BigDecimal value) {
            addCriterion("AUDITFLAG <>", value, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagGreaterThan(BigDecimal value) {
            addCriterion("AUDITFLAG >", value, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AUDITFLAG >=", value, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagLessThan(BigDecimal value) {
            addCriterion("AUDITFLAG <", value, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AUDITFLAG <=", value, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagIn(List<BigDecimal> values) {
            addCriterion("AUDITFLAG in", values, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagNotIn(List<BigDecimal> values) {
            addCriterion("AUDITFLAG not in", values, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AUDITFLAG between", value1, value2, "auditflag");
            return (Criteria) this;
        }

        public Criteria andAuditflagNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AUDITFLAG not between", value1, value2, "auditflag");
            return (Criteria) this;
        }

        public Criteria andCreatedateIsNull() {
            addCriterion("CREATEDATE is null");
            return (Criteria) this;
        }

        public Criteria andCreatedateIsNotNull() {
            addCriterion("CREATEDATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedateEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDATE =", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDATE <>", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATEDATE >", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDATE >=", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateLessThan(Date value) {
            addCriterionForJDBCDate("CREATEDATE <", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATEDATE <=", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateIn(List<Date> values) {
            addCriterionForJDBCDate("CREATEDATE in", values, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATEDATE not in", values, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATEDATE between", value1, value2, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATEDATE not between", value1, value2, "createdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table TBL_COMMENT
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}